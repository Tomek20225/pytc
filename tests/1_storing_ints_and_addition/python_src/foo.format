CodeBlock {
    co_argcount: 0,
    co_kwonlyargcount: 0,
    co_nlocals: 0,
    co_posonlyargcount: 0,
    co_stacksize: 3,
    co_flags: 64,
    co_code: [
        LoadConst(0), StoreName(0), LoadConst(1), StoreName(1), LoadName(0), LoadName(1), BinaryAdd(0), StoreName(2), LoadConst(2), LoadConst(3), MakeFunction(0), StoreName(3), LoadName(3), LoadName(0), LoadName(1), CallFunction(2), StoreName(4), LoadName(4), LoadConst(1), BinaryPower(0), StoreName(5), LoadConst(4), ReturnValue(0)
    ],
    co_const: SmallTuple([
        FlagRef(Int(1)),
        FlagRef(Int(2)),
        Code(CodeBlock {
            co_argcount: 2,
            co_kwonlyargcount: 0,
            co_nlocals: 0,
            co_posonlyargcount: 2,
            co_stacksize: 2,
            co_flags: 67,
            co_code: [
                LoadFast(0), LoadFast(1), BinaryMultiply(0), ReturnValue(0)
            ],
            co_const: SmallTuple([None]),
            co_names: FlagRef(SmallTuple([])),
            co_varnames: SmallTuple([FlagRef(ShortAsciiInterned("x")), FlagRef(ShortAsciiInterned("y"))]),
            co_freevars: Ref(3),
            co_cellvars: Ref(3),
            co_filename: FlagRef(ShortAscii("./foo.py")),
            co_name: FlagRef(ShortAsciiInterned("baz")),
            co_firstlineno: 5,
            co_lnotab: String("\u{8}\u{1}") }
        ),
        Ref(7),
        None
    ]),
    co_names: SmallTuple([FlagRef(ShortAsciiInterned("a")), FlagRef(ShortAsciiInterned("b")), FlagRef(ShortAsciiInterned("c")), Ref(7), ShortAsciiInterned("multiplication"), ShortAsciiInterned("square")]),
    co_varnames: Ref(3),
    co_freevars: Ref(3), 
    co_cellvars: Ref(3),
    co_filename: Ref(6),
    co_name: FlagRef(ShortAsciiInterned("<module>")),
    co_firstlineno: 1,
    co_lnotab: String("\u{4}\0\u{4}\u{1}\u{8}\u{1}\u{8}\u{2}\n\u{3}\u{c}\u{1}")
}